<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Daniel1n</title>
    <link>https://daniel1n.github.io/post/</link>
    <description>Recent content in Posts on Daniel1n</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 May 2020 17:29:57 +0800</lastBuildDate>
    
	<atom:link href="https://daniel1n.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring Framework的AOP编程</title>
      <link>https://daniel1n.github.io/post/5.springblog3/</link>
      <pubDate>Thu, 07 May 2020 17:29:57 +0800</pubDate>
      
      <guid>https://daniel1n.github.io/post/5.springblog3/</guid>
      <description>第一章 AOP 的相关概念  1.1 AOP 概述  1.1.1 什么是 AOP 1.1.2 AOP 的作用及优势 1.1.3 AOP 的实现方式     第二章 动态代理  2.1 动态代理的特点 2.2 动态代理常用的有两种方式 2.3 使用 JDK 官方的 Proxy 类创建代理对象 2.4 使用 CGLib 的 Enhancer 类创建代理对象   第三章 Spring 中的 AOP  3.1 Spring 中 AOP 的细节  3.1.1 AOP 相关术语 3.1.2 spring 中的 AOP 的执行过程   3.2 基于 XML 的 AOP 配置  3.</description>
    </item>
    
    <item>
      <title>Spring Framework 基于注解的IOC配置</title>
      <link>https://daniel1n.github.io/post/4.springblog2/</link>
      <pubDate>Wed, 06 May 2020 16:48:48 +0800</pubDate>
      
      <guid>https://daniel1n.github.io/post/4.springblog2/</guid>
      <description>第一章 常用注解  1.1 用于创建对象的  1.1.1 @Component 1.1.2 @Controller @Service @Repository   1.2 用于注入数据的  1.2.1 @Autowired 1.2.2 @Qualifier 1.2.3 @Resource 1.2.4 @Value   1.3 用于改变作用范围的：  1.3.1 @Scope   1.4 和生命周期相关的：  1.4.1 @PostConstruct 1.4.2 @PreDestroy   1.5 关于 Spring 注解和 XML 的选择问题  Spring 管理 Bean 方式的比较：     第二章 spring 的纯注解配置  2.1 @Configuration 2.2 @ComponentScan 2.3 @Bean 2.4 @PropertySource 2.</description>
    </item>
    
    <item>
      <title>Spring Framework 基于XML的IOC配置</title>
      <link>https://daniel1n.github.io/post/3.springblog1/</link>
      <pubDate>Tue, 05 May 2020 20:21:05 +0800</pubDate>
      
      <guid>https://daniel1n.github.io/post/3.springblog1/</guid>
      <description>第一章 Spring概述  1.1 spring是什么 1.2 Spring的发展历程 1.3 Spring 的优势 1.4 Spring的体系结构   第二章 IoC的概念和作用  2.1 什么是程序的耦合 2.2 解决程序耦合的思路 2.3 工厂模式解耦 2.4 控制反转-Inversion Of Control   第三章 使用 Spring的IOC 解决程序耦合  3.1 前期准备  3.1.1 准备Spring的开发包 3.1.2 创建业务层接口和实现类 3.1.3 创建持久层接口和实现类   3.2 基于 XML 的配置  3.2.1 让spring管理资源，在配置文件中配置service和dao 3.2.2 测试配置是否成功   3.3 spring中的工厂的类结构图  3.3.1 BeanFactory 和 ApplicationContext 的区别 3.3.2 ApplicationContext 接口的实现类   3.</description>
    </item>
    
    <item>
      <title>Java 的核心技术</title>
      <link>https://daniel1n.github.io/post/0.java/</link>
      <pubDate>Mon, 04 May 2020 22:32:33 +0800</pubDate>
      
      <guid>https://daniel1n.github.io/post/0.java/</guid>
      <description>第一章 Java程序设计概述  1.1 Java “白皮书”的关键术语 1.2 Java applet 与 Internet 1.3 Java发展简史   第二章 Java程序设计环境  2.1 安装Java开发工具包   第三章 Java的基本程序设计结构  3.1 一个简单的Java应用程序 3.2 注释 3.3 数据类型  3.3.1 整数 3.3.2 浮点数 3.3.3 char类型 3.3.4 Unicode 和char类型 3.3.5 boolean类型   3.4 变量  3.4.1 变量初始化 3.4.2 常量   3.5 运算符  3.5.1 数学函数与常量 3.5.2 数值类型之间的转换 3.5.3 强制类型转换 3.5.4 结合赋值和运算符 3.5.5 自增与自减运算符 3.5.6 关系和boolean运算符 3.</description>
    </item>
    
    <item>
      <title>Java Web 的要点总结</title>
      <link>https://daniel1n.github.io/post/2.javalearn/</link>
      <pubDate>Mon, 04 May 2020 14:33:01 +0800</pubDate>
      
      <guid>https://daniel1n.github.io/post/2.javalearn/</guid>
      <description>基础知识 该部分是整个路线里面最最重要的部分，也是后续进行框架学习、能看懂开源项目的前置基础，这部分是最不能忽视的！
一、语言本身 如下一些重点必须掌握：
 语法基础 OO编程思想：类、对象、封装、继承、多态、接口 容器 异常 泛型 I/O 注解 反射 图形化界面，如 swing的东西跳过不看  二、数据结构和算法  几大基础数据结构类型得烂熟于心，比如：字符串、链表、二叉树、栈、队列等等； 基本的几大算法要了如指掌，比如查找、排序、动态规划等等。  三、TCP/IP协议栈  TCP/IP协议栈可以说是当下互联网通信的基石，无论如何一定要对TCP/IP的协议栈了如指掌，包括：ARP协议、IP协议、ICMP协议、TCP和UDP协议、DNS协议、HTTP协议、HTTPS协议等等 TCP/IP:  数据链路层：ARP,RARP 网络层： IP,ICMP,IGMP 传输层：TCP ,UDP,UGP 应用层：Telnet,FTP,SMTP,SNMP,DNS,HTTP,HTTPS    四、设计模式  倒不需要23种设计模式全部很熟悉，常见的几个，比如：单例模式、工厂模式、代理模式、策略模式、模板方法模式等几个熟练于心即可  五、数据库和SQL  数据库基本原理了解，SQL语句熟练书写  项目工具   Linux系统基本命令会使用， Linux系统上常用的服务会部署
  代码管理：SVN或 Git 二选一，持续练习，熟练使用
  基于 Maven或 Gradle的 Java项目管理二选一，熟练使用
  应用框架 一、Spring全家桶   了解Spring、Mybatis等框架的基本原理
  Spring Boot框架会熟练使用、开发业务、掌握基本原理</description>
    </item>
    
    <item>
      <title>在Windows 10 使用Hugo搭建博客</title>
      <link>https://daniel1n.github.io/post/1.blog/</link>
      <pubDate>Sun, 03 May 2020 18:08:28 +0800</pubDate>
      
      <guid>https://daniel1n.github.io/post/1.blog/</guid>
      <description>如何在Windows 10 使用Hugo搭建自己的博客  一、 安装Hugo  1.1 设置目录 1.2 下载地址 1.3 设置环境变量 1.4 验证是否安装成功   二、 用Hugo生成博客 三、 设置主题 四、 在本地启动个人博客 五、 写一篇博客文章 六、将个人博客部署到远端的服务器  1. 创建GitHub的repository 2. 在myblog中创建一个public文件 3. 将public文件内容，上传到GitHub的repository   七、 如何更新博客 总结    如何在Windows 10 使用Hugo搭建自己的博客 一、 安装Hugo 参考：https://bwaycer.github.io/hugo_tutorial.hugo/tutorials/installing-on-windows/
 1.1 设置目录 需要一个位置来存储Hugo可执行文件，hugo程序包的内容bin（您构建的文件）和存放个人博客的内容Sites。
打开Windows资源管理器。 创建一个新文件夹：（C:\Hugo假设您希望Hugo在C驱动器上–它可以在任何地方使用。推荐还是存在放在D盘）
在Hugo文件夹中创建一个子文件夹：C:\hugo\bin。
在Hugo中创建另一个子文件夹：C:\hugo\sites。
 1.2 下载地址 Hugo的GitHub地址：https://github.com/gohugoio/hugo/releases
找到目标文件：hugo_0.69.2_Windows-64bit.zip
下载得到一个zip的压缩文件，然后解压到C:\Hugo\bin中
 1.3 设置环境变量 新建环境变量：
变量名 HUGO_HOME
变量值 C:\hugo</description>
    </item>
    
  </channel>
</rss>